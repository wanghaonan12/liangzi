package com.pde.pdes.portal.honor.controller;

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.pde.pdes.portal.Constants.Constants;
import com.pde.pdes.portal.honor.dto.HonorDTO;
import com.pde.pdes.portal.honor.dto.QueryDTO;
import com.pde.pdes.portal.honor.po.HonorPO;
import com.pde.pdes.portal.honor.service.HonorService;
import com.pde.pdes.portal.vo.SimpleResponse;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.async.WebAsyncTask;

import javax.validation.Valid;
import java.util.List;

@RestController
@Api(tags = {"荣誉档案照片"})
@RequestMapping("/honor")
public class HonorController {


    @Autowired
    private HonorService honorService;

    @PostMapping("/add")
    @ApiOperation(value = "添加相册")
    public WebAsyncTask<SimpleResponse<?>> add(@Valid @RequestBody HonorDTO dto) {
        return new WebAsyncTask<SimpleResponse<?>>(30 * 1000L, Constants.EXECUTOR_NAME, () -> {
            return new SimpleResponse<Boolean>(honorService.addHonor(dto));
        });
    }

    @PostMapping("/remove")
    @ApiOperation(value = "批量删除相册")
    public WebAsyncTask<SimpleResponse<?>> removeById(@Valid @RequestBody Integer[] ids) {
        return new WebAsyncTask<SimpleResponse<?>>(30 * 1000L, Constants.EXECUTOR_NAME, () -> {
            return new SimpleResponse<Boolean>(honorService.removeById(ids),"删除成功");
        });
    }

    @PostMapping("/update")
    @ApiOperation(value = "修改相册")
    public WebAsyncTask<SimpleResponse<?>> update(@Valid @RequestBody HonorPO po) {
        return new WebAsyncTask<SimpleResponse<?>>(30 * 1000L, Constants.EXECUTOR_NAME, () -> {
            return new SimpleResponse<Boolean>(honorService.update(po),"修改成功");
        });
    }

    @GetMapping("/get")
    @ApiOperation(value = "模糊查询相册")
    public WebAsyncTask<SimpleResponse<?>> getList(@Valid @RequestBody QueryDTO queryDTO) {
        return new WebAsyncTask<SimpleResponse<?>>(30 * 1000L, Constants.EXECUTOR_NAME, () -> {
            try {
                //1、调用PageHelper的startPage方法设置参数,其中第一项为当前页，第二项为每页显示条数
                PageHelper.startPage(queryDTO.getPageNum(), queryDTO.getPageSize());
                //2、调用Mapper层查询的方法
                List<HonorPO> all = honorService.find(queryDTO.getTitle());
                PageInfo<HonorPO> honorPOPageInfo = new PageInfo<>(all);
                return new SimpleResponse<PageInfo<HonorPO>>(honorPOPageInfo);
            } finally {
                PageHelper.clearPage(); //清理 ThreadLocal 存储的分页参数,保证线程安全
            }
        });
    }
}
