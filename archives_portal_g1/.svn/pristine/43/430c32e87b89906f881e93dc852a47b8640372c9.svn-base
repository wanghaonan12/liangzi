<template>
  <div class="wrapper">
    <el-row class="table-toolbar">
      <div class="left">
        <el-input v-model="tableQuery.searchText" placeholder="请输入检索关键字" size="mini" class="search-input" />
        <el-button size="mini" type="primary" @click="getVideoTableData">检索</el-button>
      </div>
      <div class="right">
        <el-button size="mini" type="primary" @click="onInsertButtonClick">新增</el-button>
        <el-button size="mini" type="success" @click="onEnableButtonClick">发布</el-button>
        <el-button size="mini" type="info" @click="onDisableButtonClick">取消发布</el-button>
        <el-button size="mini" type="danger" @click="onDelButtonClick">删除</el-button>
      </div>
    </el-row>
    <el-table
      :data="tableData"
      border
      stripe
      size="mini"
      style="width: 100%"
      height="660"
      @select="onSelectionChange"
      v-loading="loading">
      <el-table-column type="selection" align="center" />
      <el-table-column type="index" label="序号" width="80" align="center">
        <template slot-scope="{ $index }">
          <span>{{ (tableQuery.pageNum - 1) * tableQuery.pageSize + $index + 1 }}</span>
        </template>
      </el-table-column>
      <el-table-column prop="title" label="标题" width="300" align="center" />
      <el-table-column prop="description" label="描述" width="900" align="center" />
      <!-- <el-table-column prop="front_path" label="封面" width="600"></el-table-column> -->
      <el-table-column prop="enablePublish" label="是否发布" align="center">
        <template slot-scope="{ row }">
          <el-tag type="success" v-if="row.enablePublish == 1">{{ row.enablePublish | enablePublishFilter }}</el-tag>
          <el-tag type="info" v-else-if="row.enablePublish == 0">{{ row.enablePublish | enablePublishFilter }}</el-tag>
        </template>
      </el-table-column>
      <el-table-column prop="memo" label="操作" width="100" align="center">
        <template slot-scope="scope">
          <el-button type="text" size="medium" @click="onModifyButtonClick(scope.row)">编辑</el-button>
          <el-button type="text" size="medium" @click="onDetailButtonClick(scope.row)">详情</el-button>
        </template>
      </el-table-column>
    </el-table>
    <pagination
      v-show="tableQuery.total > 0"
      layout="total, prev, pager, next, jumper"
      :total="tableQuery.total"
      :page.sync="tableQuery.page"
      :limit.sync="tableQuery.size"
      @pagination="getVideoTableData" />
    <modify-dialog ref="modifyDialog" @refreshTableData="getVideoTableData" />
    <video-detail-dialog ref="videoDetailDialog" @getVideoList="getVideoTableData"></video-detail-dialog>
  </div>
</template>

<script>
import { getVideoListApi, deleteVideoInfoApi, enableVideoByIdsApi, disableVideoByIdsApi } from '@/api/videoManagement'
import Pagination from '@/components/Pagination'
import ModifyDialog from '@/views/videoManagement/components/ModifyDialog'
import VideoDetailDialog from '@/views/videoManagement/components/VideoDetailDialog'

export default {
  components: {
    Pagination,
    ModifyDialog,
    VideoDetailDialog
  },
  data() {
    return {
      tableQuery: {
        total: 0,
        pageNum: 1,
        pageSize: 10,
        searchText: ''
      },
      loading: false,
      tableData: [],
      tableSelection: []
    }
  },
  mounted() {
    this.getVideoTableData()
  },
  methods: {
    // 获取列表信息
    async getVideoTableData() {
      this.loading = true
      const res = await getVideoListApi(this.tableQuery)
      if (res && res.status) {
        this.tableData = res.content.data
        this.tableQuery.total = res.content.total
      } else {
        this.$message(res.message)
      }
      this.loading = false
    },
    onSelectionChange(s, row) {
      this.tableSelection = s
    },
    // 点击编辑按钮
    onModifyButtonClick(row) {
      this.$refs.modifyDialog.showDialog(row, 'edit')
    },
    // 点击新增按钮
    onInsertButtonClick(row) {
      this.$refs.modifyDialog.showDialog(row, 'add')
    },
    // 点击详情按钮
    onDetailButtonClick(row) {
      this.$refs.videoDetailDialog.showDialog(row)
    },
    // 批量删除
    onDelButtonClick() {
      if (!this.tableSelection.length) {
        this.$message('请勾选条目')
        return
      }
      this.$confirm('确定执行该操作吗？', '确认')
        .then((r) => {
          let ids = []
          const tableSelection = this.tableSelection
          tableSelection.map((item) => {
            ids.push(item.id)
          })
          deleteVideoInfoApi(ids).then((res) => {
            if (res && res.status) {
              this.$message('删除成功')
              this.getVideoTableData()
            } else {
              this.$message(res.message)
            }
          })
        })
        .catch()
    },
    // 批量发布
    onEnableButtonClick() {
      if (!this.tableSelection.length) {
        this.$message('请勾选条目')
        return
      }
      this.$confirm('确定执行该操作吗？', '确认')
        .then((r) => {
          let ids = []
          const tableSelection = this.tableSelection
          tableSelection.map((item) => {
            ids.push(item.id)
          })
          enableVideoByIdsApi(ids).then((res) => {
            if (res && res.status) {
              this.$message('发布成功')
              this.getVideoTableData()
            } else {
              this.$message(res.message)
            }
          })
        })
        .catch()
    },
    // 批量取消发布
    onDisableButtonClick() {
      if (!this.tableSelection.length) {
        this.$message('请勾选条目')
        return
      }
      this.$confirm('确定执行该操作吗？', '确认')
        .then((r) => {
          let ids = []
          const tableSelection = this.tableSelection
          tableSelection.map((item) => {
            ids.push(item.id)
          })
          disableVideoByIdsApi(ids).then((res) => {
            if (res && res.status) {
              this.$message('取消发布成功')
              this.getVideoTableData()
            } else {
              this.$message(res.message)
            }
          })
        })
        .catch()
    }
  },
  filters: {
    enablePublishFilter: function (value) {
      return value % 2 ? '是' : '否'
    }
  }
}
</script>

<style lang="scss" scoped>
.wrapper {
  padding: 10px 18px;

  .table-toolbar {
    margin-bottom: 10px;

    .left {
      float: left;

      .search-input {
        width: 210px;
        margin-right: 10px;
      }
    }

    .right {
      float: right;
    }
  }
}
</style>
