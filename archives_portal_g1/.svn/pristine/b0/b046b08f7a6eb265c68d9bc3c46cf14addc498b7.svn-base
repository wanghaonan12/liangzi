package com.pde.pdes.portal.video.controller;

import com.pde.pdes.portal.Constants.Constants;
import com.pde.pdes.portal.company.dto.QueryCondition;
import com.pde.pdes.portal.video.dto.VideoDTO;
import com.pde.pdes.portal.video.service.VideoService;
import com.pde.pdes.portal.vo.SimpleResponse;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.context.request.async.WebAsyncTask;

import javax.annotation.Resource;
import javax.validation.Valid;

/**
 * @author: mth
 * @date: 2022/11/30
 * @description:
 */
@RestController
@Api(tags = {"视频档案服务"})
@RequestMapping("/video")
public class VideoController {
    @Autowired
    private VideoService videoService;

    @PostMapping
    @ApiOperation(value = "新增视频档案")
    public WebAsyncTask<SimpleResponse<?>> add(@Valid @RequestBody VideoDTO dto) {
        return new WebAsyncTask<SimpleResponse<?>>(30 * 1000L, Constants.EXECUTOR_NAME, () -> {
            return new SimpleResponse<>(videoService.insert(dto));
        });
    }

    @PostMapping("/find")
    @ApiOperation(value = "获取公司列表")
    public WebAsyncTask<SimpleResponse<?>> getList(@RequestBody QueryCondition query) {
        return new WebAsyncTask<SimpleResponse<?>>(30 * 1000L, Constants.EXECUTOR_NAME, () -> {
//            Map<String, Object> map = new HashMap<String, Object>();
//            Page<CompanyPO> page = PageHelper.startPage(query.getPageNum(), query.getPageSize(), true, false, false);
//            service.find(query.getSearchText());
//            map.put("total", page.getTotal());
//            map.put("rows", page.getResult());
//            return new SimpleResponse<Object>(true, "操作成功", map);
            return null;
        });
    }

}
