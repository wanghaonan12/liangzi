package com.pde.pdes.portal.video.controller;

import com.pde.pdes.portal.Constants.Constants;
import com.pde.pdes.portal.video.utils.MinIoUtils;
import com.pde.pdes.portal.video.vo.FileUploadVO;
import com.pde.pdes.portal.vo.SimpleResponse;
import io.swagger.annotations.*;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.async.WebAsyncTask;
import org.springframework.web.multipart.MultipartFile;

import javax.annotation.Resource;
import java.util.List;

/**
 * @author: mth
 * @date: 2022/11/30
 * @description: 文件操作 控制层
 */
@Api(tags = {"文件上传服务"})
@RestController
@RequestMapping(value = "/files")
public class FileController {
    @Resource
    private MinIoUtils minIoUtils;

    @PostMapping(value = "/upload")
    @ApiOperation(value = "文件上传")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "folder", value = "模块文件夹", type = "form", required = true),
            @ApiImplicitParam(name = "files", value = "文件列表", type = "form", required = true)
    })
    public WebAsyncTask<SimpleResponse<?>> uploadFiles(String folder, MultipartFile[] files) throws Exception {
        return new WebAsyncTask<SimpleResponse<?>>(30 * 1000L, Constants.EXECUTOR_NAME, () -> {
            List<FileUploadVO> fileUploadInfoList = minIoUtils.filesUpload("pde-file", folder, files);
            return new SimpleResponse<>(true, "文件上传成功！", fileUploadInfoList);
        });
    }

    @PostMapping(value = "/delete")
    @ApiOperation(value = "文件删除")
    @ApiImplicitParam(name = "filePath", value = "文件路径", type = "body", required = true)
    public WebAsyncTask<SimpleResponse<?>> deleteObject(String filePath) throws Exception {
        String[] path = filePath.split("/");
        minIoUtils.removeObject("pde-file",
                "/" + path[2] + "/" + path[3]);
        return new WebAsyncTask<SimpleResponse<?>>(30 * 1000L, Constants.EXECUTOR_NAME, () -> {
            return new SimpleResponse<>("", "删除文件成功！");
        });
    }

}
