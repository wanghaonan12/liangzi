package com.pde.pdes.portal.standard.Utils;

import com.aliyun.oss.OSSClient;
import lombok.Data;
import lombok.extern.log4j.Log4j;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Configuration;
import org.springframework.stereotype.Component;

import javax.annotation.PostConstruct;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Logger;

/**
 * @author : WangRich
 * @Description : description
 * @date : 2022/12/7 11:36
 */

@Component
@Data
@Slf4j
public class AliYunOssClientUtils {

    @Value("${oss.endPoint}")
    private String endpoint;

    @Value("${oss.accessKeyId}")
    private String accessKeyId;

    @Value("${oss.accessKeySecret}")
    private String accessKeySecret;
    @Value("${oss.bucketName}")
    private String bucketName;

    OSSClient ossClient;

    public AliYunOssClientUtils() {
    }

    @PostConstruct
    public void init() {
        ossClient = new OSSClient("https://" + endpoint, accessKeyId, accessKeySecret);
    }

    /**
     * 销毁
     */
    public void destory(OSSClient ossClient) {
        ossClient.shutdown();
    }

    /**
     * 上传到oss
     *
     * @param file           需要上传的文件
     * @param parentFileName 上层目录名【评审安排/造价文件】
     * @return 保存好的文件名称
     */
    public String uploadObjectOss(File file, String parentFileName) {
        Date parentDateTime = new Date();
        String yyyyMMdd = new SimpleDateFormat("yyyy-MM-dd").format(parentDateTime);
        String hhMMss = new SimpleDateFormat("HH:mm:ss").format(parentDateTime);
        String fileName = parentFileName + "/" + yyyyMMdd + "/" + hhMMss + "/" + file.getName().replace("+", "");
        String path = "https://" + bucketName + "." + endpoint + "/" + fileName;
        try {
            log.info("图片路径："+path);
            InputStream inputStream = new FileInputStream(file);
            ossClient.putObject(bucketName, fileName, inputStream);
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            ossClient.shutdown();
        }
        return path;
    }

}

