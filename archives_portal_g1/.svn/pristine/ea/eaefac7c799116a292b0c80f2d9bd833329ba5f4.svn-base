<template>
  <div>
    <el-dialog title="编辑照片" :visible.sync="show" class="fileSetDialog" fullscreen="true">
      <!--    <el-dialog title='编辑照片' :visible.sync='show' class='fileSetDialog' fullscreen='true'>-->
      <el-container>
        <el-aside width="30%">
          <el-form ref="photoListFileData" :model="photoListFileData" label-width="80px">
            <el-image :src="photoListFileData.file_path" />
            <el-form-item v-model="photoListFileData.title" label="相册名称:" class="fileListFrom">
              {{ photoListFileData.title }}
            </el-form-item>
            <el-form-item v-model="photoListFileData.description" label="相册描述:" class="fileListFrom">
              {{ photoListFileData.description }}
            </el-form-item>
            <el-form-item v-model="photoListFileData.create_time" label="创建日期:" class="fileListFrom">
              {{ photoListFileData.create_time }}
            </el-form-item>
          </el-form>
        </el-aside>
        <el-container width="70%">
          <el-header height="40px">
            <el-button type="primary" icon="el-icon-plus" plain @click="photoFileAdd">新增</el-button>
            <el-button type="warning" icon="el-icon-error" circle @click='photoFileDeleteByIds'>删除</el-button>
          </el-header>
          <el-main>
            <el-table :data="photoFileData" class="fileTable" @selection-change='fileHandleSelectionChange'>
              <el-table-column
                type="index"
                width="40"
              />
              <el-table-column
                type="selection"
                width="55"
              />
              <el-table-column label="操作" width="120" class-name="picOperation">
                <template slot-scope="scope">
                  <el-tooltip class="item" effect="dark" content="编辑图片名">
                    <i class="el-icon-edit" @click="photoFileEdit(scope.row)" />
                  </el-tooltip>
                  <el-tooltip class="item" effect="dark" content="删除">
                    <i class="el-icon-delete" @click="photoFileDelete(scope.row)" />
                  </el-tooltip>
                  <el-tooltip v-if="scope.row.enable_front===0" class="item" effect="dark" content="设置封面">
                    <i class="el-icon-finished" @click="photoFrontSet(scope.row)" />
                  </el-tooltip>
                  <el-tooltip v-else class="item" effect="dark" content="取消设置">
                    <i class="el-icon-document-delete" @click="photoCancelFrontSet(scope.row)" />
                  </el-tooltip>
                </template>
              </el-table-column>
              <el-table-column
                label="封面"
                width="180"
              >
                <template slot-scope="scope">
                  <img
                    :src="scope.row.file_path"
                    style="width: 12vw; height: 16vh"
                    alt=""
                  >
                </template>
              </el-table-column>
              <el-table-column property="file_name" label="图片名" width="120" />
              <el-table-column property="file_size" label="图片大小" width="120" />
              <el-table-column property="create_time" label="上传日期" width="300" />
            </el-table>
          </el-main>
        </el-container>
      </el-container>

    </el-dialog>
    <el-dialog title="新增图片" :visible.sync="photoFileAddDialog" width='430px'>
      <el-form :model="photoAddForm" >
        <el-form-item label="上传图片：">
          <el-upload
            ref='addPhotoFile'
            action="#"
            list-type="picture-card"
            :auto-upload="false"
            :on-remove="handleRemove"
            :on-change="filechange"
            limit='1'
            :on-exceed="handleExceed"
          >
            <i slot="default" class="el-icon-plus"/>
            <div slot="file" slot-scope="{file}">
              <img
                class="el-upload-list__item-thumbnail"
                :src="photoAddForm.filePath"
                alt=""
              >
              <span class="el-upload-list__item-actions">
                <span
                  class="el-upload-list__item-preview"
                  @click="handlePictureCardPreview(file)"
                >
                  <i class="el-icon-zoom-in" />
                </span>
                <span
                  v-if="!disabled"
                  class="el-upload-list__item-delete"
                  @click="handleRemove(file,photoAddForm.fileList)"
                >
                  <i class="el-icon-delete" />
                </span>
              </span>
            </div>
          </el-upload>
          <el-dialog :visible.sync="dialogVisible">
            <img width="100%" :src="dialogImageUrl" alt="">
          </el-dialog>
        </el-form-item>
        <el-form-item label='图片名称：'>
          <el-input v-model="photoAddForm.fileName" autocomplete="off" style='width: 200px;'></el-input>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click="photoFileAddDialog = false">取 消</el-button>
        <el-button type="primary" @click="fileAddSubmit">确 定</el-button>
      </div>
    </el-dialog>
    <el-dialog title="图片重命名" :visible.sync="photoFileEditDialog" width='30vw'>
      <el-form :model="photoEditForm" >
        <el-form-item label="图片：">
          <img
            :src="photoEditForm.file_path"
            alt=""
            style='width: 200px'
          >
        </el-form-item>
        <el-form-item label='图片名称：'>
          <el-input v-model="photoEditForm.file_name" autocomplete="off" style='width: 200px;'></el-input>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click="photoFileEditDialog = false">取 消</el-button>
        <el-button type="primary" @click="fileEditSubmit">确 定</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>

import { uploadFiles } from '@/api/file'
import {
  addPhotoFile,
  cancelSetFront,
  deletePhotoByIds, deletePhotoFileByIds,
  editPhotoFile,
  getPhotoFileList,
  setFront
} from '@/api/photoManagement'

export default {
  name: 'FileSetDialog',
  data() {
    return {
      dialogTitle: '编辑照片',
      show: false,
      modalType: 'fileSet',
      fileQuerry: {
        pageNum: 1,
        pageSize: 20,
        photoId: 0
      },
      photoListFileData: {
        file_path: '',
        title: '',
        description: '',
        create_time: '' // '2019-10-1 20:18:58'
      },
      photoFileData: [],
      multipleSelection: [],
      photoAddForm: {
        fileName: '',
        filePath: '',
        fileSize: '',
        enableFront: 0,
        photoId: 0
      },
      photoEditForm: {

      },
      dialogImageUrl: '',
      dialogVisible: false,
      disabled: false,
      photoFileAddDialog: false,
      photoFileEditDialog: false,
      // rules: {
      //   title: [{ required: true, message: '请输入相册名', trigger: 'blur' }],
      // }
    }
  },
  methods: {
    showDialog(row) {
      console.log(row)
      this.photoListFileData = row
      this.fileQuerry.photoId = row.id
      this.photoAddForm.photoId = row.id
      this.load()
      this.show = true
    },
    load() {
      getPhotoFileList(this.fileQuerry).then((res) => {
        console.log('-------------')
        console.log(res)
        console.log('-------------')
        this.photoFileData = res.content.rows
        this.total = res.content.total
        console.log(this.photoFileData)
      })
    },
    photoFrontSet(row) {
      console.log('=========')
      console.log(row.enable_front)
      console.log(row.id)
      setFront({ id: row.id }).then(res => {
        console.log(res)
        console.log(row.enable_front)
        this.load()
      })
    },
    photoCancelFrontSet(row) {
      console.log('=========')
      console.log(row.id)
      cancelSetFront(row.id).then(res => {
        console.log(res)
        console.log(row.enable_front)
      })
    },
    photoFileAdd() {
      this.photoAddForm.fileName=''
      this.photoFileAddDialog = true
    },
    fileHandleSelectionChange(val) {
      this.multipleSelection = val
    },
    photoFileDeleteByIds(){
      let ids = []
      console.log(this.multipleSelection)
      if (!this.multipleSelection.length) {
        this.$message('请勾选条目')
        return
      }
      this.multipleSelection.forEach((e) => {
        ids.push(e.id)
      })
      console.log(ids)
      this.$confirm('确认删除所有勾选照片？').then(a => {
        deletePhotoFileByIds(ids).then(res => {
          this.$message('删除成功')
          this.load()
        })
      })
      this.$refs.delDialog.showDialog()
    },
    photoFileDelete(row) {
      console.log(row.id)
      let id = []
      id.push(row.id)
      console.log(id)
      this.$confirm('确认删除该张照片？').then(a => {
        deletePhotoFileByIds(id).then(res => {
          this.$message('删除成功')
          this.load()
        })
      })
    },
    handleRemove(file) {
      let uploadFiles = this.$refs.addPhotoFile.uploadFiles
      for (var i = 0; i < uploadFiles.length; i++) {
        if (uploadFiles[i]['url'] == file.url) {
          uploadFiles.splice(i, 1)
        }
      }
    },
    handlePictureCardPreview(file) {
      this.dialogImageUrl = file.url
      this.dialogVisible = true
    },
    filechange(file){
      this.dialogImageUrl=file.url
      console.log(this.dialogImageUrl)
      console.log(file.raw)
      const formData = new FormData()
      formData.append('files', file.raw)
      formData.append('folder', 'photo')
      uploadFiles(formData).then((res) => {
        console.log(res)
        this.photoAddForm.filePath=res.content[0].filePath
        this.photoAddForm.fileSize=Math.round(res.content[0].fileSize / 1024)
        console.log(this.photoAddForm.fileSize)
        // console.log(res)
      })
    },
    handleExceed(file) {
      this.$message.warning('仅限制单张照片上传')
    },
    fileAddSubmit() {
      console.log(this.photoAddForm)
      addPhotoFile(this.photoAddForm).then(res => {
        console.log(res)
        this.photoFileAddDialog = false
        let deleteFiles = this.$refs.addPhotoFile.uploadFiles
        deleteFiles.splice(0)
        this.load()
      })
    },
    photoFileEdit(row) {
      this.photoEditForm = {}
      console.log(row)
      this.photoEditForm = row
      console.log(this.photoEditForm)
      this.photoFileEditDialog=true
    },
    fileEditSubmit() {
      editPhotoFile(this.photoEditForm).then(res => {
        console.log(res)
        this.photoFileEditDialog=false
      })
      console.log(this.photoEditForm)
    }
  }
}
</script>

<style scoped>
.el-form .fileListFrom {
  /*margin-left: 10%;*/
  /*border: 1px solid black;*/
  /*width: 60%;*/
  /*text-align: right;*/
}

.el-form .el-form-item__content {
  margin-right: 10px;
  label-width: 100px
}

.el-header {
  /*border: 1px solid black;*/
  /*padding: 0;*/
  border-bottom: 1px solid rgba(128, 128, 128, 0.45);
  margin-left: 2px;
}

.el-header .el-button {
  width: 60px;
  height: 30px;
  margin-top: 5px;
  margin-right: 6px;
  /*display: inline-block;*/
  /*justify-content: center;*/
  /*align-items: center;*/
  text-align: center;
  /*border: 1px solid black;*/
  border-radius: 1.5vh;
  padding: 0;
}

.el-container {
  padding: 0;
  /*border: 1px solid black;*/
}

/deep/ .fileSetDialog .el-dialog__body {
  padding: 0px 5px;
  /*width: 100%;*/
}

/deep/ .fileTable .el-table__body {
  width: 100%;
}

.fileSetDialog .el-main {
  padding-top: 0px;
}

.picOperation i {
  margin-left: 5px;
}

.picOperation {
  border: 1px solid black;
}

.el-table {
  /*border: 1px solid black;*/
}

</style>
