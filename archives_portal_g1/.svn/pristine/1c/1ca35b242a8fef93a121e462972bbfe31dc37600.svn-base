import Vue from 'vue'
import Router from 'vue-router'

Vue.use(Router)

/* Layout */
import Layout from '@/layout'

/* Router Modules */
import storageManagementRouter from './modules/storageManagementRouter'
import homeManagementRouter from './modules/homeManagementRouter'
import navbarManagementRouter from './modules/navbarManagementRouter'
import articleManagementRouter from './modules/articleManagementRouter'
import picManagementRouter from './modules/picManagementRouter'
import videoManagementRouter from './modules/videoManagementRouter'
import archiveManagementRouter from './modules/archiveManagementRouter'
import chronicleManagementRouter from './modules/chronicleManagementRouter'
import honorManagementRouter from './modules/honorManagementRouter'
import noticeManagementRouter from './modules/noticeManagementRouter'
import standardManagementRouter from './modules/standardManagementRouter'
/**
 * Note: sub-menu only appear when route children.length >= 1
 * Detail see: https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html
 *
 * hidden: true                   if set true, item will not show in the sidebar(default is false)
 * alwaysShow: true               if set true, will always show the root menu
 *                                if not set alwaysShow, when item has more than one children route,
 *                                it will becomes nested mode, otherwise not show the root menu
 * redirect: noRedirect           if set noRedirect will no redirect in the breadcrumb
 * name:'router-name'             the name is used by <keep-alive> (must set!!!)
 * meta : {
    roles: ['admin','editor']    control the page roles (you can set multiple roles)
    title: 'title'               the name show in sidebar and breadcrumb (recommend set)
    icon: 'svg-name'/'el-icon-x' the icon show in the sidebar
    noCache: true                if set true, the page will no be cached(default is false)
    affix: true                  if set true, the tag will affix in the tags-view
    breadcrumb: false            if set false, the item will hidden in breadcrumb(default is true)
    activeMenu: '/example/list'  if set path, the sidebar will highlight the path you set
  }
 */

/**
 * constantRoutes
 * a base page that does not have permission requirements
 * all roles can be accessed
 */
export const constantRoutes = [
  {
    path: '/portal',
    redirect: '/portal/index',
    component: () => import('@/views/portal/index'),
    hidden: true,
    children: [
      {
        name: 'Index',
        path: 'index',
        hidden: true,
        component: () => import('@/views/portal/components/PortalIndex')
      },
      {
        name: 'Notify',
        path: 'notify',
        hidden: true,
        component: () => import('@/views/portal/components/Notify')
      },
      {
        name: 'Archive',
        path: 'archive',
        component: () => import('@/views/archive/index'),
        hidden: true

      },
      {
        name: 'Detail',
        path: 'detail/:id',
        hidden: true,
        component: () => import('@/views/archive/components/Page1')
      },
      {
        name: 'honor',
        path: 'honor',
        hidden: true,
        component: () => import('@/views/honor/components/honorAlbum'),

      },
      {
        name: 'AlbumDetail',
        path: 'albumDetail/:id',
        hidden: true,
        component: () => import('@/views/honor/components/albumDetail')
      },
      {
        name: 'Chronicle',
        path: 'Chronicle',
        hidden: true,
        component: () => import('@/views/chronicle/components/Chronicle')
      },
      {
        name: 'Chronicle',
        path: 'Chronicle/:id?',
        hidden: true,
        component: () => import('@/views/chronicle/components/ChronicleDetail')
      },
      {
        name: 'standard',
        path: '/standard',
        hidden: true,
        component: () => import('@/views/standard/index')
      },
      {
        name: 'standardDetail',
        path: '/standardDetail/:id',
        hidden: true,
        component: () => import('@/views/standard/standardFileDetail')
      }

    ]
  },
  {
    path: '/login',
    component: () => import('@/views/login/index'),
    hidden: true
  },
  {
    path: '/404',
    component: () => import('@/views/error-page/404'),
    hidden: true
  },
  {
    path: '/',
    component: Layout,
    redirect: '/portal'
  }
]

/**
 * asyncRoutes
 * the routes that need to be dynamically loaded based on user roles
 */
export const asyncRoutes = [
  /** when your routing map is too long, you can split it into small modules **/
  homeManagementRouter,
  navbarManagementRouter,
  articleManagementRouter,
  picManagementRouter,
  storageManagementRouter,
  videoManagementRouter,
  archiveManagementRouter,
  honorManagementRouter,

  chronicleManagementRouter,  standardManagementRouter,
  noticeManagementRouter,
  // 404 page must be placed at the end !!!
  { path: '*', redirect: '/404', hidden: true }
]

const createRouter = () =>
  new Router({
    // mode: 'history', // require service support
    scrollBehavior: () => ({ y: 0 }),
    routes: constantRoutes
  })

const router = createRouter()

// Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465
export function resetRouter() {
  const newRouter = createRouter()
  router.matcher = newRouter.matcher // reset router
}

export default router
